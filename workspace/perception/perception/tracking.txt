#!/usr/bin/env python3
from __future__ import annotations

import math
import time
import numpy as np

from numpy.typing import NDArray
from typing import List, Dict, Tuple, Optional

from filterpy.common import Q_discrete_white_noise
from filterpy.kalman import ExtendedKalmanFilter as EKF
from scipy.linalg import block_diag

import rclpy
from rclpy.node import Node
from rcl_interfaces.msg import ParameterDescriptor, ParameterType, FloatingPointRange, IntegerRange, SetParametersResult
from rclpy.parameter import Parameter

from std_msgs.msg import Float32
from builtin_interfaces.msg import Time
from f110_msgs.msg import Wpnt, WpntArray, ObstacleArray, Obstacle
from sensor_msgs.msg import LaserScan
from nav_msgs.msg import Odometry
from visualization_msgs.msg import Marker, MarkerArray

from frenet_conversion.frenet_converter import FrenetConverter
from tf_transformations import euler_from_quaternion

def normalize_s(s: float, track_length: float) -> float:
    """Normalizes S coordinate around the track length.
    """
    new_s = s % (track_length)
    if new_s > track_length/2:
        new_s -= track_length

    return new_s